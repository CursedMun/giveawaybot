import {
  ButtonStyle,
  ComponentType,
  InteractionUpdateOptions
} from 'discord.js';
import { developmentconfig } from './developmentconfig';

const meta = {
  defaultEmbed: {},
  defaultColor: 0x2f3136,
  defaultTimezone: 'Europe/Moscow',
  minGuildUsers: 1,
  timeSpelling: {
    w: '–Ω',
    d: '–¥',
    h: '—á',
    m: '–º',
    s: '—Å'
  },
  pluralTime: {
    w: [' –Ω–µ–¥–µ–ª—è', ' –Ω–µ–¥–µ–ª–∏', ' –Ω–µ–¥–µ–ª—å'],
    d: [' –¥–µ–Ω—å', ' –¥–Ω—è', ' –¥–Ω–µ–π'],
    h: [' —á–∞—Å', ' —á–∞—Å–∞', ' —á–∞—Å–æ–≤'],
    m: [' –º–∏–Ω—É—Ç–∞', ' –º–∏–Ω—É—Ç—ã', ' –º–∏–Ω—É—Ç'],
    s: [' —Å–µ–∫—É–Ω–¥–∞', ' —Å–µ–∫—É–Ω–¥—ã', ' —Å–µ–∫—É–Ω–¥']
  }
};
const emojis = {
  giveaway: 'üéâ',
  confirmEmojis: ['‚úÖ', '‚ùå']
};
const embeds = {
  confirmEmbed: {
    ephemeral: true,
    embeds: [
      {
        color: meta.defaultColor,
        author: {
          name: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
        }
      }
    ],
    components: [
      {
        type: ComponentType.ActionRow,
        components: [
          {
            label: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            customId: 'confirm',
            type: ComponentType.Button,
            style: ButtonStyle.Success
          },
          {
            label: '–û—Ç–º–µ–Ω–∏—Ç—å',
            customId: 'reject',
            type: ComponentType.Button,
            style: ButtonStyle.Danger
          }
        ]
      }
    ]
  } as InteractionUpdateOptions,
  helpEmbed: {
    components: [
      {
        type: ComponentType.ActionRow,
        components: [
          {
            label: '–ö–æ–º–∞–Ω–¥—ã',
            customId: 'commands',
            type: ComponentType.Button,
            style: ButtonStyle.Primary,
            disabled: true
          },
          {
            label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            customId: 'information',
            type: ComponentType.Button,
            style: ButtonStyle.Secondary,
            disabled: true
          },
          {
            label: '–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏',
            customId: 'giveaways',
            type: ComponentType.Button,
            style: ButtonStyle.Secondary,
            disabled: true
          },
          {
            label: '–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤',
            customId: 'feedback',
            type: ComponentType.Button,
            style: ButtonStyle.Secondary,
            disabled: true
          },
          {
            label: '–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –±–æ—Ç–∞',
            customId: 'support',
            type: ComponentType.Button,
            style: ButtonStyle.Secondary,
            disabled: true
          }
        ]
      }
    ]
  } as InteractionUpdateOptions
};

const ticks = {
  tenSeconds: 10 * 1000, //10 seconds in milliseconds
  oneMinute: 6e4, // 1 minute in milliseconds
  oneHour: 3.6e6, // 1 hour in milliseconds
  oneWeek: 6.048e8, // 1 week in milliseconds
  oneMonth: 2.628e9 // one month in milliseconds
};

const conf = {
  meta,
  embeds,
  ticks,
  emojis,
  ids: {
    devs: ['423946555872116758', '597601244365848585'],
    devGuild: '905552166348009503',
    giveawayChannel: '981546639695183953',
    newGuildChannel: '981153654356729866',
    feedbackChannel: '981656983230885899'
  }
};
export const config =
  process.env.NODE_ENV === 'development' ? developmentconfig : conf;
